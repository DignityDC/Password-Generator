import java.security.SecureRandom;

public class PasswordGenerator {
    private static final String LOWERCASE_LETTERS = "abcdefghijklmnopqrstuvwxyz";
    private static final String UPPERCASE_LETTERS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private static final String NUMBERS = "0123456789";
    private static final String SYMBOLS = "!@#$%^&*()_+-=[]{};':,.<>/?";
    private static final String ALL_CHARACTERS = LOWERCASE_LETTERS + UPPERCASE_LETTERS + NUMBERS + SYMBOLS;

    private static final SecureRandom SECURE_RANDOM = new SecureRandom();

    public static String generatePassword(int length, boolean includeLowercaseLetters, boolean includeUppercaseLetters, boolean includeNumbers, boolean includeSymbols) {
        if (length <= 0) {
            throw new IllegalArgumentException("Length must be a positive integer");
        }

        StringBuilder characters = new StringBuilder();
        if (includeLowercaseLetters) {
            characters.append(LOWERCASE_LETTERS);
        }
        if (includeUppercaseLetters) {
            characters.append(UPPERCASE_LETTERS);
        }
        if (includeNumbers) {
            characters.append(NUMBERS);
        }
        if (includeSymbols) {
            characters.append(SYMBOLS);
        }

        if (characters.length() == 0) {
            throw new IllegalArgumentException("At least one character set must be included");
        }

        char[] password = new char[length];
        // Generate the first character as a letter
        password[0] = (includeLowercaseLetters || includeUppercaseLetters) ? (char)(SECURE_RANDOM.nextInt(26) + 'a') : NUMBERS.charAt(SECURE_RANDOM.nextInt(NUMBERS.length()));
        // Generate the remaining characters randomly
        for (int i = 1; i < length - 1; i++) {
            password[i] = characters.charAt(SECURE_RANDOM.nextInt(characters.length()));
        }
        // Generate the last character as a letter
        password[length - 1] = (includeLowercaseLetters || includeUppercaseLetters) ? (char)(SECURE_RANDOM.nextInt(26) + 'a') : NUMBERS.charAt(SECURE_RANDOM.nextInt(NUMBERS.length()));

        return new String(password);
    }

    public static void main(String[] args) {
        int length = 15;
        boolean includeLowercaseLetters = true;
        boolean includeUppercaseLetters = true;
        boolean includeNumbers = true;
        boolean includeSymbols = true;

        String password = generatePassword(length, includeLowercaseLetters, includeUppercaseLetters, includeNumbers, includeSymbols);
        while (!Character.isLetter(password.charAt(0)) || !Character.isLetter(password.charAt(password.length() - 1))) {
            password = generatePassword(length, includeLowercaseLetters, includeUppercaseLetters, includeNumbers, includeSymbols);
        }
        System.out.println("Generated password: " + password);
    }
}
